name: Release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
     fork:
       description: "Enter a gvsbuild fork for the build with the latest stack, defaults to wingtk."
       default: "wingtk"
     ref:
       description: "Enter a git ref for checking out the above repository, defaults to main."
       default: "main"

jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        python: ["3.9","3.10","3.11","3.12"]
        platform: [x64,x86]
        vstudio: [17]
        fork: ["${{ github.event.inputs.fork }}"]
        ref: ["${{ github.event.inputs.ref }}"]
      fail-fast: false

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.fork }}/gvsbuild
          fetch-depth: 0
          ref: ${{ matrix.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.arch }}

      - name: Install Build Deps
        run: python -m pip install wheel build

      - name: Install gvsbuild tool
        run: python -m pip install .

      - name: Build
        run: >
          gvsbuild build
          --platform=${{ matrix.platform }}
          --configuration=release
          --ninja-opts -j2
          --enable-gi
          --py-wheel
          gtk3 pygobject lz4 enchant adwaita-icon-theme

      - name: Zip Bundle
        run: >
          7z a
          ${{ github.workspace }}/${{ env.release_name }}.zip
          "C:\gtk-build\gtk\${{matrix.platform}}\release"
        env:
          release_name: "gvsbuild-py${{ matrix.python }}-vs${{ matrix.vstudio }}-${{ matrix.platform }}"

      - name: Current Date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $env:GITHUB_OUTPUT

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          name: release-${{ steps.date.outputs.date }}
          commit: ${{ github.sha }}
          tag: release-${{ steps.date.outputs.date }}
          body: gvsbuild-${{ steps.date.outputs.date }}
          makeLatest: true
          allowUpdates: true
          replacesArtifacts: true
          artifacts: "*.zip"
